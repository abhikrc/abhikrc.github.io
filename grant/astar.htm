<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Formal Design Techniques for Reactive Embedded Systems</title>
</head>

<body>

<p><u><b><font size="5">Formal Design Techniques for Reactive Embedded Systems</font></b></u></p>
<p><b>PI : <a href="http://www.comp.nus.edu.sg/~thiagu">P.S. Thiagarajan</a></b></p>
<p><b>Co-PI:&nbsp; <a href="http://www.comp.nus.edu.sg/~abhik/">Abhik 
Roychoudhury</a>,&nbsp; <a href="http://www.comp.nus.edu.sg/~dongjs">Dong Jin 
Song</a></b></p>
<p><b>Abstract:</b></p>
<p class="MsoNormal"><span style="font-size: 12.0pt">Embedded system design has 
become important in the recent years with the integration of microcomputers in 
compact and portable devices such as hand-phones and set-top boxes. Many of 
these embedded systems are reactive (where the computer component interacts with 
the physical environment in an ongoing fashion) and safety critical <i>e.g.</i> 
automotive applications. This project will concentrate on building formal design 
techniques. The aim of these techniques is to inject <i>greater</i> reliability
<i>earlier</i> in the design cycle of such embedded systems.</span></p>
<p class="MsoNormal">&nbsp;<span style="font-size: 12.0pt">We aim to develop a high 
level modeling language suitable for reactive embedded systems. To enable 
increased usage of this language by non-expert designers, our modeling language 
will be graphical, and will borrow notations from the widely accepted Unified 
Modeling Language (UML) diagrams. The novelty of our research however lies not 
in the language itself, but in the techniques to analyze it. We plan to employ 
automated verification techniques like <i>model checking</i> to validate models 
constructed in our language. Furthermore, we will link up our modeling language 
with (a) textual formalisms for capturing requirements, as well as (b) a 
lower-level&nbsp; representation suitable for generating code. This will give rise to 
a formal design methodology encompassing requirements, high level 
specifications, automated verification and code generation.</span></p>
<p><b>Manpower funding for the project: </b><i>5 Research Scholars (RS)</i></p>

</body>

</html>
